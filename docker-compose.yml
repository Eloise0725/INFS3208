version: "3.9"
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 3s
      retries: 10

  web:
    build: .
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "
      python manage.py collectstatic --noinput &&
      python manage.py migrate &&
      python manage.py seed || true &&
      gunicorn msms.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 60
      "
    expose:
      - "8000"
    volumes:
      - staticfiles:/app/staticfiles
      - sqlite_data:/app/dbdata

  nginx:
    image: nginx:alpine
    depends_on:
      - web
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - staticfiles:/static:ro
volumes:
  pgdata:
  staticfiles:
  sqlite_data:
