name: Build and Deploy to GKE

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: infs3208-magpie
  GKE_CLUSTER: msms-cluster
  GKE_REGION: australia-southeast2
  IMAGE: msms
  REGISTRY: australia-southeast2-docker.pkg.dev

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Tests
      run: |
        python manage.py test

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: Install GKE Auth Plugin
      run: |
        gcloud components install gke-gcloud-auth-plugin

    - name: Configure Docker for Artifact Registry
      run: |
        gcloud auth configure-docker ${{ env.REGISTRY }}

    - name: Build Docker Image
      run: |
        docker build -t ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.IMAGE }}/${{ env.IMAGE }}:${{ github.sha }} \
                     -t ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.IMAGE }}/${{ env.IMAGE }}:latest .

    - name: Push Docker Image
      run: |
        docker push ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.IMAGE }}/${{ env.IMAGE }}:${{ github.sha }}
        docker push ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.IMAGE }}/${{ env.IMAGE }}:latest

    - name: Get GKE Credentials
      run: |
        gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --region ${{ env.GKE_REGION }}

    - name: Create Namespace
      run: |
        kubectl apply -f k8s/namespace.yaml

    - name: Update Secret with Django Key
      run: |
        kubectl create secret generic msms-secrets \
          --from-literal=DJANGO_SECRET_KEY="${{ secrets.DJANGO_SECRET_KEY }}" \
          --from-literal=DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
          --namespace=msms \
          --dry-run=client -o yaml | kubectl apply -f -

    - name: Deploy to GKE
      run: |
        kubectl apply -f k8s/configmap.yaml
        kubectl apply -f k8s/postgres.yaml
        kubectl apply -f k8s/web.yaml
        kubectl apply -f k8s/ingress.yaml

    - name: Wait for Deployment
      run: |
        kubectl rollout status deployment/msms-web -n msms --timeout=5m

    - name: Get Service Info
      run: |
        kubectl get services -n msms
        kubectl get ingress -n msms
